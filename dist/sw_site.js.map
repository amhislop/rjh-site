{"version":3,"sources":["sw_site.js"],"names":["cacheName","self","addEventListener","e","console","log","waitUntil","caches","keys","then","cacheNames","Promise","all","map","cache","delete","respondWith","fetch","request","res","resClone","clone","open","put","catch","err","match"],"mappings":"AAAA;AACA,IAAMA,SAAS,GAAG,MAAlB,EAEA;AACA;;AACAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAAC,CAAC,EAAI;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,CAFD,GAIA;;AACAJ,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAkC,UAAAC,CAAC,EAAI;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADqC,CAErC;;AACAF,EAAAA,CAAC,CAACG,SAAF,CACEC,MAAM,CAACC,IAAP,GAAcC,IAAd,CAAmB,UAAAC,UAAU;AAAA,WAC3BC,OAAO,CAACC,GAAR,EACE;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAe,UAAAC,KAAK,EAAI;AACtB,UAAIA,KAAK,KAAKd,SAAd,EAAyB;AACvBI,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,eAAOE,MAAM,CAACQ,MAAP,CAAcD,KAAd,CAAP;AACD;AACF,KALD,CAFF,CAD2B;AAAA,GAA7B,CADF;AAaD,CAhBD,GAkBA;;AACAb,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,CAAC,EAAI;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEAF,EAAAA,CAAC,CAACa,WAAF,CACEC,KAAK,CAACd,CAAC,CAACe,OAAH,CAAL,CACGT,IADH,CACQ,UAAAU,GAAG,EAAI;AACX;AACA,QAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,EAAjB,CAFW,CAGX;;AACAd,IAAAA,MAAM,CAACe,IAAP,CAAYtB,SAAZ,EAAuBS,IAAvB,CAA4B,UAAAK,KAAK,EAAI;AACnC;AACAA,MAAAA,KAAK,CAACS,GAAN,CAAUpB,CAAC,CAACe,OAAZ,EAAqBE,QAArB;AACD,KAHD;AAIA,WAAOD,GAAP;AACD,GAVH,EAWGK,KAXH,CAWS,UAAAC,GAAG;AAAA,WAAIlB,MAAM,CAACmB,KAAP,CAAavB,CAAC,CAACe,OAAf,EAAwBT,IAAxB,CAA6B,UAAAU,GAAG;AAAA,aAAIA,GAAJ;AAAA,KAAhC,CAAJ;AAAA,GAXZ,CADF;AAcD,CAjBD","file":"sw_site.js","sourceRoot":"..","sourcesContent":["/* eslint-disable no-restricted-globals */\nconst cacheName = 'v1.0';\n\n// Call Install Event\n// eslint-disable-next-line no-unused-vars\nself.addEventListener('install', e => {\n  console.log('Service Worker: Installed');\n});\n\n// Call Activate Event\nself.addEventListener('activate', e => {\n  console.log('Service Worker: Activated');\n  // Remove unwanted caches\n  e.waitUntil(\n    caches.keys().then(cacheNames =>\n      Promise.all(\n        // eslint-disable-next-line array-callback-return\n        cacheNames.map(cache => {\n          if (cache !== cacheName) {\n            console.log('Service Worker: Clearing Old Cache');\n            return caches.delete(cache);\n          }\n        })\n      )\n    )\n  );\n});\n\n// Call Fetch Event\nself.addEventListener('fetch', e => {\n  console.log('Service Worker: Fetching');\n\n  e.respondWith(\n    fetch(e.request)\n      .then(res => {\n        // Make copy/clone of response\n        const resClone = res.clone();\n        // Open cahce\n        caches.open(cacheName).then(cache => {\n          // Add response to cache\n          cache.put(e.request, resClone);\n        });\n        return res;\n      })\n      .catch(err => caches.match(e.request).then(res => res))\n  );\n});\n"]}